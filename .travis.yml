sudo: required
cache:
- apt
language: generic
matrix:
  include:
  - name: Bionic melodic
    dist: bionic
    env: ROS_DISTRO=melodic
branches:
  only:
  - master
addons:
  apt:
    packages:
    - doxygen
    - doxygen-doc
    - doxygen-latex
    - doxygen-gui
    - graphviz
env:
  global:
  - ROS_CI_DESKTOP="`lsb_release -cs`"
  - CI_SOURCE_PATH=$(pwd)
  - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
  - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
  - ROS_PARALLEL_JOBS='-j8 -l6'
  - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
  - secure: Sp4+gehazIiD+cvW+USFkjByHeG7OnFkQZNUjMqM5un3DY6IA1ZmAAqaTYzY+ESZZvn+Hdx90JCjy/dOAGO1xcdyTnwqH9DpukMbmSMBeVGwB3uLh8PT4IWCLNhghA++Lcf4lAGcz8RskHrvMkODdN8fdXHL3u/9nwUYUuLS5Tg4yegCuKEQlJd0D97M3WCCWwXD99K588wrSheTbVonPcIMcCTo8JKz4iULOOVkE3FHksfCgi9uLVgg78szyJ8Rvja8lkIGbtBzQrddYR9itKvJxrTDGtwyjNE6sUBbnyWQc4x+J+ssgZ8HTytwG/XQhB5ZlmwX8CJS05+cViTtlKSq6mszU03fKMtXWx28v2Sk/9WWulRwelky/5tkP8ZfyOepgN7r8Lxw+Red+jhq7c7sjiUNmJSpxLwnMEL4TgkIRJmMl2Q65u4IJIi4tlwW83BV4KjOtMB9NKKH0v0Ms34jox4uv8e1YVFkvAaSWAKlBaa8Knd040/ToWBKFmYG4hNyMEZA92grMIfdBa68CEz0EpAuBnVwutNv4mdiqdgIWhse2iko2gtvTfbb8GW3yB7lGA6fezmgM7OgFMF9hmml7qBmnOG+Jknm8AZsxl/aNeYv5gHoR5ySNc7cHyO3vUbkZHBK9o/lWtPXFtRocEDJiLALCd4wsiCxVBVcPHg=
before_install:
- sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\"
  > /etc/apt/sources.list.d/ros-latest.list"
- sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
- sudo apt-get update -qq
- sudo apt-get install dpkg
- sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-ros-base
- source /opt/ros/$ROS_DISTRO/setup.bash
- sudo rosdep init
- rosdep update --include-eol-distros
install:
- cd $CI_SOURCE_PATH
- catkin_make
- source devel/setup.bash
before_script:
- cd $CI_SOURCE_PATH/src
- wstool init
- if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
- wstool up
- cd $CI_SOURCE_PATH
- rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
script:
- source /opt/ros/$ROS_DISTRO/setup.bash
- cd $CI_SOURCE_PATH
- catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
- source devel/setup.bash
- catkin_make run_tests && catkin_test_results
- doxygen doxyfile
# Wraps the compilation with the Build Wrapper to generate configuration (used
# later by the SonarScanner) into the "bw-output" folder
- build-wrapper-linux-x86-64 --out-dir bw-output catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
# And finally run the SonarCloud analysis - read the "sonar-project.properties"
# file to see the specific configuration
- sonar-scanner -Dsonar.cfamily.build-wrapper-output=bw-output
deploy:
  provider: pages
  skip_cleanup: true
  local_dir: "$TRAVIS_BUILD_DIR/doxydocs/html"
  github_token: "$GH_REPO_TOKEN"
  on:
    branch: master
